#jinja2: lstrip_blocks: "True"
#### Blue Banquise file ####
## {{ansible_managed}}

{% macro node_main_network(macro_network_interfaces,macro_current_iceberg_network) %}
{{ macro_network_interfaces | selectattr('network','defined') | selectattr('network','match','^'+macro_current_iceberg_network+'-[a-zA-Z0-9]+') | map(attribute='network') | list | first }}
{% endmacro %}

{{hostvars[inventory_hostname]}}

global:
  scrape_interval: {{prometheus.scrape_interval}}
  evaluation_interval: {{prometheus.evaluation_interval}}

rule_files:
  - 'alerts/*.yml'

alerting:
  alertmanagers:
  - static_configs:
    - targets:
{% if hostvars[inventory_hostname]['icebergs_system'] and hostvars[inventory_hostname]['prometheus']['federate'] is defined and hostvars[inventory_hostname]['prometheus']['federate'] != inventory_hostname %}
      - {{hostvars[inventory_hostname]['prometheus']['federate']}}:9093
      - localhost:9093 # Alertmanager is considered on the same host for now
{% else %}
      - localhost:9093 # Alertmanager is considered on the same host for now
{% endif %}

scrape_configs:

  # I watch myself
  - job_name: 'prometheus_master'
    scrape_interval: 30s
    static_configs:
      - targets: ['localhost:9090']

{% if hostvars[inventory_hostname]['icebergs_system'] and hostvars[inventory_hostname]['prometheus']['federate'] is defined and hostvars[inventory_hostname]['prometheus']['federate'] == inventory_hostname %}
# FEDERATE CONFIGURATION
  - job_name: 'federate'
    scrape_interval: 15s

    honor_labels: true
    metrics_path: '/federate'

    params:
      'match[]':
        - '{job="prometheus_master"}'
        - '{__name__=~"node.*"}'

    static_configs:
      - targets:
  {% for node in hostvars[inventory_hostname]['groups']['equipment_typeM'] %}
    {% if node != ansible_host %}
      {% set ice_network = node_main_network(hostvars[node]['network_interfaces'],j2_current_iceberg_network) %} 
        - '{{node}}-{{ice_network}}:9090'
    {% endif %}
  {% endfor %}
{% endif %}

# GENERIC EXPORTER
# All equipment profiles and their exporters
# If iceberg mechanism is enabled you need to define prometheus.federate to specify the master of prometheus server
{% for equipment in j2_equipment_groups_list %}
  {% if hostvars[groups[equipment][0]]['monitoring'] is defined and hostvars[groups[equipment][0]]['monitoring'] is not none and hostvars[groups[equipment][0]]['monitoring']['exporters'] is defined and hostvars[groups[equipment][0]]['monitoring']['exporters'] is not none and hostvars[groups[equipment][0]]['monitoring']['exporters'] is iterable %}
    {% for exporter, exporter_vars in hostvars[groups[equipment][0]]['monitoring']['exporters'].items() %}
      {% if exporter != "ipmi_exporter" and exporter != "snmp_exporter" %}
        # if not hostvars[inventory_hostname]['icebergs_system'] or ( hostvars[inventory_hostname]['prometheus']['federate'] is defined and hostvars[inventory_hostname]['prometheus']['federate'] != inventory_hostname ) %}
  - job_name: '{{ equipment }}_{{ exporter }}'
    #scrape_interval: {{ exporter_vars.scrape_interval | default('') }}
    #scrape_timeout: {{ exporter_vars.scrape_timeout | default('') }}
    static_configs:
          {% for node in groups[equipment] %}
            {% if hostvars[inventory_hostname]['icebergs_system'] and hostvars[inventory_hostname]['j2_current_iceberg'] == hostvars[node]['j2_current_iceberg'] %}
      - targets: ['{{ node }}:{{ exporter_vars.port }}']
	    {% elif not hostvars[inventory_hostname]['icebergs_system'] %}
      - targets: ['{{ node }}:{{ exporter_vars.port }}']
            {% endif %}
          {% endfor %}
        # endif %}
      {% endif %}
    {% endfor %}
  {% endif %}
{% endfor %}


# SNMP_EXPORTER
{% for equipment in j2_equipment_groups_list %}
  {% if hostvars[groups[equipment][0]]['monitoring'] is defined and hostvars[groups[equipment][0]]['monitoring'] is not none and hostvars[groups[equipment][0]]['monitoring']['exporters'] is defined and hostvars[groups[equipment][0]]['monitoring']['exporters'] is not none and hostvars[groups[equipment][0]]['monitoring']['exporters'] is iterable and "snmp_exporter" in hostvars[groups[equipment][0]]['monitoring']['exporters'] %}
    {% if not hostvars[inventory_hostname]['icebergs_system'] or ( hostvars[inventory_hostname]['prometheus']['federate'] is defined and hostvars[inventory_hostname]['prometheus']['federate'] != inventory_hostname ) %}
  - job_name: 'snmp_{{equipment}}'
    scrape_interval: {{ hostvars[groups[equipment][0]]['monitoring']['exporters']['snmp_exporter']['scrape_interval'] | default('') }}
    scrape_timeout: {{ hostvars[groups[equipment][0]]['monitoring']['exporters']['snmp_exporter']['scrape_timeout'] | default('') }}
    static_configs:
     - targets:
      {% for node in groups[equipment] %}
        {% if hostvars[inventory_hostname]['icebergs_system'] and hostvars[inventory_hostname]['j2_current_iceberg'] == hostvars[node]['j2_current_iceberg'] %}
       - {{ node }}
        {% endif %}
      {% endfor %}

    metrics_path: /snmp
    # params:
     # module: [if_mib]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: localhost:{{ hostvars[groups[equipment][0]]['monitoring']['exporters']['snmp_exporter']['port'] | default('9116') }}
    {% endif %}
  {% endif %}
{% endfor %}


# BMC - IPMI_EXPORTER
{% for equipment in j2_equipment_groups_list %}
  {% if hostvars[groups[equipment][0]]['monitoring'] is defined and hostvars[groups[equipment][0]]['monitoring'] is not none and hostvars[groups[equipment][0]]['monitoring']['exporters'] is defined and hostvars[groups[equipment][0]]['monitoring']['exporters'] is not none and hostvars[groups[equipment][0]]['monitoring']['exporters'] is iterable and "ipmi_exporter" in hostvars[groups[equipment][0]]['monitoring']['exporters'] %}
    {% if not hostvars[inventory_hostname]['icebergs_system'] or ( hostvars[inventory_hostname]['prometheus']['federate'] is defined and hostvars[inventory_hostname]['prometheus']['federate'] != inventory_hostname ) %}
  - job_name: ipmi_{{equipment}}
    params:
      module: [{{equipment}}]
    scrape_interval: {{ hostvars[groups[equipment][0]]['monitoring']['exporters']['ipmi_exporter']['scrape_interval'] | default('') }}
    scrape_timeout: {{ hostvars[groups[equipment][0]]['monitoring']['exporters']['ipmi_exporter']['scrape_timeout'] | default('') }}
    metrics_path: /ipmi
    scheme: http
    static_configs:
      {% for node in groups[equipment] %}
        {% if hostvars[node]['bmc'] is defined and not none %}
          {% if hostvars[inventory_hostname]['icebergs_system'] and hostvars[inventory_hostname]['j2_current_iceberg'] == hostvars[node]['j2_current_iceberg'] %}
      - targets: ['{{hostvars[node]['bmc']['name']}}']
          {% endif %}
        {% endif %}
      {% endfor %}
    relabel_configs:
    - source_labels: [__address__]
      separator: ;
      regex: (.*)
      target_label: __param_target
      replacement: ${1}
      action: replace
    - source_labels: [__param_target]
      separator: ;
      regex: (.*)
      target_label: instance
      replacement: ${1}
      action: replace
    - separator: ;
      regex: .*
      target_label: __address__
      replacement: localhost:{{ hostvars[groups[equipment][0]]['monitoring']['exporters']['ipmi_exporter']['port'] | default('9290') }}
      action: replace
    {% endif %}
  {% endif %}
{% endfor %}
